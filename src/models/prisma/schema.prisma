// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  @@map(name: "user")
  id Int @default(autoincrement()) @id
  username String @db.VarChar(255) @unique
  account Account[]
  person Person[]
  place Place[]
  category Category[]
  label Label[]
  event Event[]
  transaction Transaction[]
}

model Account {
  @@map(name: "account")
  id Int @default(autoincrement()) @id
  name String @db.VarChar(255)
  type String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id])
  user_id Int
  transaction Transaction[]
}

model Person {
  @@map(name: "person")
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id])
  user_id Int
}

model Place {
  @@map(name: "place")
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id])
  user_id Int
  transaction Transaction[]
}

model Category {
  @@map(name: "category")
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id])
  user_id Int
  sub_category SubCategory[]
  transaction Transaction[]
}

model SubCategory {
  @@map(name: "sub_category")
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  category Category @relation(fields: [category_id], references: [id])
  category_id Int
  transaction Transaction[]
}

model Label {
  @@map(name: "label")
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id])
  user_id Int
  transaction Transaction[]
}

model Event {
  @@map(name: "event")
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id])
  user_id Int
  transaction Transaction[]
}

model Transaction {
  @@map(name: "transaction")
  id Int @id @default(autoincrement())
  title String @db.VarChar(255)
  value Decimal
  in_out String @db.VarChar(3)
  transaction_date DateTime
  time_setted Boolean
  method String
  description String @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id])
  user_id Int
  place Place @relation(fields: [place_id], references: [id])
  place_id Int
  category Category @relation(fields: [category_id], references: [id])
  category_id Int
  sub_category SubCategory @relation(fields: [sub_category_id], references: [id])
  sub_category_id Int
  event Event @relation(fields: [event_id], references: [id])
  event_id Int
  label Label @relation(fields: [label_id], references: [id])
  label_id Int
  account Account @relation(fields: [account_id], references: [id])
  account_id Int
}